{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.states.ts","webpack:///./src/app/components/avatar/avatar.component.css","webpack:///./src/app/components/avatar/avatar.component.html","webpack:///./src/app/components/avatar/avatar.component.ts","webpack:///./src/app/components/containers/issueboard/issueboard.component.html","webpack:///./src/app/components/containers/issueboard/issueboard.component.scss","webpack:///./src/app/components/containers/issueboard/issueboard.component.ts","webpack:///./src/app/components/containers/scrumboard/scrumboard.component.css","webpack:///./src/app/components/containers/scrumboard/scrumboard.component.html","webpack:///./src/app/components/containers/scrumboard/scrumboard.component.ts","webpack:///./src/app/components/forms/login/login.component.html","webpack:///./src/app/components/forms/login/login.component.scss","webpack:///./src/app/components/forms/login/login.component.ts","webpack:///./src/app/components/header/header.component.html","webpack:///./src/app/components/header/header.component.scss","webpack:///./src/app/components/header/header.component.ts","webpack:///./src/app/components/marker/marker.component.html","webpack:///./src/app/components/marker/marker.component.scss","webpack:///./src/app/components/marker/marker.component.ts","webpack:///./src/app/constants/config.ts","webpack:///./src/app/constants/endpoints.ts","webpack:///./src/app/pipes/group-issues.pipe.ts","webpack:///./src/app/pipes/group-scrums.pipe.ts","webpack:///./src/app/services/authentication.service.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/app/services/filter.service.ts","webpack:///./src/app/services/scrum-data.service.ts","webpack:///./src/app/services/search.service.ts","webpack:///./src/app/utils/layouts.utils.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<ui-view name=\\\"content\\\"></ui-view>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","// ANGULAR MODULES\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HttpClientXsrfModule } from '@angular/common/http';\nimport { Pipe, PipeTransform } from '@angular/core';\n\n// INSTALLED MODULES\nimport { DataTableModule } from 'angular-6-datatable';\nimport { UIRouterModule } from '@uirouter/angular';\nimport { NgxMyDatePickerModule } from 'ngx-mydatepicker';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { TimepickerModule } from 'ngx-bootstrap/timepicker';\nimport { SatPopoverModule } from '@ncstate/sat-popover';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\n// IMPORTED FROM PROJECT\nimport { APP_STATES } from 'app/app.states';\nimport { AppComponent } from 'app/app.component';\nimport { ScrumboardComponent } from 'app/components/containers/scrumboard/scrumboard.component';\nimport { AvatarComponent } from 'app/components/avatar/avatar.component';\nimport { IssueboardComponent } from 'app/components/containers/issueboard/issueboard.component';\nimport { HeaderComponent } from 'app/components/header/header.component';\nimport { MarkerComponent } from 'app/components/marker/marker.component';\nimport { LoginComponent } from 'app/components/forms/login/login.component';\nimport { GroupScrumsPipe } from './pipes/group-scrums.pipe';\nimport { GroupIssuesPipe } from './pipes/group-issues.pipe';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ScrumboardComponent,\n    AvatarComponent,\n    IssueboardComponent,\n    HeaderComponent,\n    MarkerComponent,\n    LoginComponent,\n    GroupScrumsPipe,\n    GroupIssuesPipe,\n  ],\n  imports: [\n    NgbModule.forRoot(),\n    BrowserModule,\n    HttpClientModule,\n    FontAwesomeModule,\n    BrowserAnimationsModule,\n    SatPopoverModule,\n    CollapseModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    TimepickerModule.forRoot(),\n    HttpClientXsrfModule.withOptions({\n      cookieName: 'csrftoken',\n      headerName: 'X-CSRFToken',\n    }),\n    UIRouterModule.forRoot(APP_STATES),\n    FormsModule,\n    DataTableModule,\n    NgxMyDatePickerModule.forRoot(),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { ContentOnly } from 'app/utils/layouts.utils'\nimport { ScrumboardComponent } from 'app/components/containers/scrumboard/scrumboard.component'\nimport { IssueboardComponent } from 'app/components/containers/issueboard/issueboard.component'\nimport { LoginComponent } from 'app/components/forms/login/login.component'\n\nlet HOME_STATE: Object[] = [\n    {\n        name: 'scrumboard',\n        url: '/',\n        views: ContentOnly(ScrumboardComponent),\n    }\n]\n\nlet ISSUES_STATE: Object[] = [\n    {\n        name: 'issuesboard',\n        url: '/issues',\n        views: ContentOnly(IssueboardComponent),\n    }\n]\n\nlet LOGIN_STATE: Object[] = [\n    {\n        name: 'login',\n        url: '/login',\n        views: ContentOnly(LoginComponent),\n    }\n]\n\nexport const APP_STATES = {\n\tstates: [].concat(\n        HOME_STATE,\n        ISSUES_STATE,\n        LOGIN_STATE\n\t)\n}","module.exports = \"\"","module.exports = \"<div class=\\\"dot d-flex justify-content-center align-items-center rounded-circle pt-1\\\" [style.background-color]= \\\"getColor(id)\\\">\\n    <b class=\\\"avatar\\\">{{getUsername(username)}}</b>\\n</div>\"","import * as colorGen from 'string-to-color';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { ScrumDataService } from '../../services/scrum-data.service';\n\n@Component({\n  selector: 'app-avatar',\n  templateUrl: './avatar.component.html',\n  styleUrls: ['./avatar.component.css']\n})\nexport class AvatarComponent implements OnInit {\n\n  @Input() id\n  @Input() username\n\n  constructor(\n      private scrumDataService: ScrumDataService,\n  ) { }\n\n  ngOnInit() {\n      \n  }\n\n  getColor(id: string){\n      if(!id){\n          id = 'blue'\n      }\n      return colorGen(id)\n  }\n\n  getUsername(username: string){\n      if(!username){\n          return 'CS'\n      }\n      // try{\n      if( username.indexOf('.') == -1){\n          return username.charAt(0).toUpperCase() + \n                  username.charAt(1).toUpperCase()\n        }\n      var avatar_name = username.split('.');\n      \n      return avatar_name[0].charAt(0).toUpperCase() + \n              avatar_name[1].charAt(0).toUpperCase()\n  }\n}\n","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row border-bottom d-flex justify-content-between\\\">\\n        <div class=\\\"m-3 ml-5 pl-5 d-flex align-items-center w-50\\\">\\n            <div class=\\\"tabs clickable\\\">\\n                <span class=\\\"less-emphasis\\\" (click)=\\\"goToDashboard()\\\"><b>Dashboard</b></span>\\n            </div>\\n            <div class=\\\"tabs clickable\\\">\\n                <span class=\\\"less-emphasis\\\"><b>All Issues</b></span>\\n            </div>\\n            <fa-icon [icon]=\\\"icons.search\\\" class=\\\"less-emphasis border-0 m-1 mr-3 ml-5 pl-5\\\"></fa-icon>\\n            <input type=\\\"text\\\" placeholder=\\\"Search\\\" class=\\\"border-0 less-emphasis searchbar\\\" (input)=\\\"getIssues(search.value)\\\" #search>\\n        </div>\\n        <div class=\\\"m-3 mr-5\\\">\\n            <app-avatar [username]=\\\"logged_user\\\" [id]=\\\"logged_user\\\"></app-avatar>\\n        </div>\\n    </div>\\n    <div class=\\\"row issues_container\\\">\\n        <div class=\\\"col p-5 mt-2 ml-5\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"d-flex align-items-center summary_box flex-fill\\\">\\n                    <div class=\\\"marker_static\\\">\\n                    </div>\\n                    <div>\\n                        <p class=\\\"mb-0 ml-2 title\\\">You have {{ getPending()?.length }} unresolved issues</p>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row pt-4 pb-4 justify-content-between\\\">\\n                <div class=\\\"col d-flex flex-column\\\">\\n                    <div class=\\\"d-flex flex-row align-items-center\\\">\\n                        <span class=\\\"w-25 less-emphasis\\\">Select Project</span>\\n                        <div class=\\\"input-group w-50\\\">\\n                          <select class=\\\"custom-select less-emphasis\\\" (change)=\\\"filter_project=select_project.value\\\" #select_project>\\n                            <option selected value=\\\"\\\">All Projects</option>\\n                            <option *ngFor=\\\"let project of projects\\\">{{ project.name }}</option>\\n                          </select>\\n                        </div>\\n                    </div>\\n                    <br>\\n                    <div class=\\\"d-flex flex-row align-items-center\\\">\\n                        <span class=\\\"w-25 less-emphasis\\\">Members</span>\\n                        <div class=\\\"input-group w-50\\\">\\n                          <select class=\\\"custom-select less-emphasis\\\" (change)=\\\"filter_user=select_user.value\\\" #select_user>\\n                            <option selected value=\\\"\\\">All Members</option>\\n                            <option *ngFor=\\\"let user of users\\\">{{ user.username }}</option>\\n                          </select>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col d-flex flex-column\\\">\\n                    <div class=\\\"d-flex flex-row-reverse align-items-center\\\">\\n                            <div class=\\\"w-25 input-group date_filters\\\">\\n                                <input class=\\\"form-control datepicker less-emphasis\\\" ngx-mydatepicker name=\\\"to\\\" [(ngModel)]=\\\"to_model\\\" [options]=\\\"toOptions\\\" #to_dp=\\\"ngx-mydatepicker\\\" (dateChanged)=\\\"setDateToFilter($event)\\\"/>\\n                                <span class=\\\"input-group-append\\\">\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-light less-emphasis grey-border\\\" (click)=\\\"to_dp.toggleCalendar()\\\">\\n                                        <fa-icon [icon]=\\\"icons.calendar\\\"></fa-icon>\\n                                    </button>\\n                                </span>\\n                            </div>\\n                            <h3 class=\\\"m-0 mr-2 ml-2\\\">-</h3>\\n                            <div class=\\\"w-25 input-group date_filters\\\">\\n                                <input class=\\\"form-control datepicker less-emphasis\\\" ngx-mydatepicker name=\\\"from\\\" [(ngModel)]=\\\"from_model\\\" [options]=\\\"fromOptions\\\" #from_dp=\\\"ngx-mydatepicker\\\" (dateChanged)=\\\"setDateFromFilter($event)\\\"/>\\n                                <span class=\\\"input-group-append\\\">\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-light  less-emphasis grey-border\\\" (click)=\\\"from_dp.toggleCalendar()\\\">\\n                                        <fa-icon [icon]=\\\"icons.calendar\\\"></fa-icon>\\n                                    </button>\\n                                </span>\\n                            </div>\\n                        <span class=\\\"less-emphasis mr-4\\\">Date</span>\\n                    </div>\\n                    <br>\\n                    <div class=\\\"d-flex flex-row-reverse align-items-center\\\">\\n                        <div class=\\\"input-group w-50\\\">\\n                          <select class=\\\"custom-select less-emphasis\\\" (change)=\\\"filter_status=select_status.value\\\" #select_status>\\n                            <option selected value=\\\"\\\">All</option>\\n                            <option value=\\\"P\\\">Pending</option>\\n                            <option value=\\\"R\\\">Resolved</option>\\n                            <option value=\\\"C\\\">Closed</option>\\n                          </select>\\n                        </div>\\n                        <span class=\\\"mr-5 less-emphasis\\\">Status</span>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row pt-4\\\">\\n                <div class=\\\"col-sm-3\\\">\\n                    <h4><b>Issues list</b></h4>\\n                </div>\\n            </div>\\n            <div class=\\\"row mt-3 \\\">\\n                <div class=\\\"col-4 d-flex justify-content-end pr-5\\\">\\n                    <span class=\\\"category_label\\\"><b>Project Channel</b></span>\\n                </div>\\n                <div class=\\\"col-2\\\"></div>\\n                <div class=\\\"col\\\">\\n                    <span class=\\\"category_label\\\"><b>Issues</b></span>\\n                </div>\\n                <div class=\\\"col d-flex justify-content-end mr-5\\\">\\n                    <span class=\\\"category_label pr-5\\\"><b>Due Date</b></span>\\n                </div>\\n            </div>\\n            <div class=\\\"mb-4\\\" *ngFor=\\\"let date_group of filtered_issues | groupIssues:'date_created' \\\">\\n                <div *ngIf=\\\"isWithinDate(date_group.date, filter_from, filter_to)\\\">\\n                    <div class=\\\"row mb-3\\\">\\n                        <div class=\\\"col-sm-2 d-flex\\\">\\n                            <span class=\\\"align-self-center grey-border less-emphasis\\\">{{ date_group.date | date:'longDate'}}</span>\\n                        </div>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <hr>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"d-flex flex-column m-1 scrumlist\\\">\\n                        <div class=\\\"mt-1 mb-1 scrumitem\\\" *ngFor=\\\"let issue of date_group.issues\\\">\\n                            <div *ngIf=\\\"(filter_user=='' || issue.scrum_data.user_username==filter_user) && (filter_project=='' || issue.scrum_data.project_name==filter_project) && (filter_status=='' || issue.status==filter_status) && isWithinDate(issue.scrum_data.date_created, filter_from, filter_to)\\\" class=\\\"d-flex align-items-center\\\">\\n                                <app-marker [project]=\\\"issue.scrum_data.project_name\\\"></app-marker>\\n                                <div class=\\\"d-flex flex-fill align-items-center\\\" >\\n                                    <div class=\\\"col-2 d-flex mr-4\\\">\\n                                        <div>\\n                                            <app-avatar [username]=\\\"issue.scrum_data.user_username\\\" [id]=\\\"issue.scrum_data.user_username\\\"></app-avatar>\\n                                        </div>\\n                                        <div class=\\\"ml-3\\\">\\n                                            <span><b>{{ issue.scrum_data.user_username }}</b></span>\\n                                            <br>\\n                                            <span class=\\\"less-emphasis category_label\\\">{{ issue.scrum_data.date_created | date:'shortTime'}} <span *ngIf=\\\"issue.scrum_data.is_edited\\\">(edited)</span></span>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"col-2 d-flex align-items-center mr-5\\\">\\n                                        <span class=\\\"project_label\\\">#{{ issue.scrum_data.project_name }}</span>\\n                                    </div>\\n                                    <div class=\\\"col d-flex p-0 align-items-center\\\">\\n                                        <p *ngIf=\\\"issue.is_urgent\\\" class=\\\"urgent m-0 p-1 pl-2 pr-2 mr-4 rounded-left rounded-right\\\">Urgent</p>\\n                                        <div class=\\\"d-inline-block text-truncate issue_box\\\">\\n                                            <span class=\\\"less-emphasis\\\">{{ issue.issue }}</span>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"col d-flex pr-4 align-items-center justify-content-end\\\">\\n                                        <span class=\\\"deadline_label\\\">{{ issue.deadline | date:'mediumDate'}} - {{ issue.deadline | date:'shortTime'}}</span>\\n                                    </div>\\n                                    <sat-popover #issueDetail verticalAlign=\\\"center\\\" horizontalAlign=\\\"before\\\" forceAlignment>\\n                                        <div class=\\\"issue_details\\\">\\n                                            <div class=\\\"d-flex justify-content-between\\\">\\n                                                <div class=\\\"d-flex\\\">\\n                                                    <app-avatar [username]=\\\"issue.scrum_data.user_username\\\" [id]=\\\"issue.scrum_data.user_username\\\"></app-avatar>\\n                                                    <div class=\\\"ml-3\\\">\\n                                                        <span><b>{{ issue.scrum_data.user_username }}</b></span>\\n                                                        <br>\\n                                                        <span class=\\\"less-emphasis category_label\\\">{{ issue.scrum_data.date_created | date:'shortTime'}} <span *ngIf=\\\"issue.scrum_data.is_edited\\\">(edited)</span></span>\\n                                                    </div>\\n                                                </div>\\n                                                <p *ngIf=\\\"issue.is_urgent\\\" class=\\\"urgent p-1 pl-2 pr-2 rounded-left rounded-right\\\">Urgent</p>\\n                                            </div>\\n                                            <div class=\\\"pt-4 pb-4\\\">\\n                                                <p>{{issue.issue}}</p>\\n                                            </div>\\n                                            <div class=\\\"d-flex\\\">\\n                                                <div class=\\\"d-flex flex-column mr-3\\\">\\n                                                    <span class=\\\"label less-emphasis pb-2\\\">Date</span>\\n                                                    <div class=\\\"input-group\\\">\\n                                                    <input type=\\\"text\\\" bsDatepicker class=\\\"form-control border deadline_picker\\\" #deadline_date=\\\"bsDatepicker\\\" [bsConfig]=\\\"{ dateInputFormat: 'MMMM D, YYYY' }\\\" [(ngModel)]=\\\"issue.deadline\\\" (bsValueChange)=\\\"updateDeadline(issue.id, issue.deadline)\\\" [minDate]=\\\"today\\\"/>\\n                                                    <div class=\\\"input-group-append\\\">\\n                                                        <button class=\\\"btn btn-light border border-left-0\\\" (click)=\\\"deadline_date.toggle()\\\">\\n                                                            <fa-icon [icon]=\\\"icons.angle_down\\\" class=\\\"less-emphasis\\\"></fa-icon>\\n                                                        </button>\\n                                                    </div>\\n                                                    </div>\\n                                                </div>\\n                                                <div class=\\\"d-flex flex-column\\\">\\n                                                    <span class=\\\"label less-emphasis pb-2\\\">Time</span>\\n                                                    <timepicker [(ngModel)]=\\\"issue.deadline\\\" [showSpinners]=\\\"false\\\" minuteStep='1' (isValid)=\\\"updateDeadline(issue.id, issue.deadline)\\\"></timepicker>\\n                                                </div>\\n                                            </div>\\n                                            <div>\\n                                                <button #rButton type=\\\"button\\\" class=\\\"statusbtn btn btn-outline-success m-3 ml-4\\\" (click)=\\\"updateStatus(issue.id, rButton.value)\\\" *ngIf=\\\"issue.status == 'P'\\\" value=\\\"R\\\">Mark as Solved</button>\\n                                                <button #cButton type=\\\"button\\\" class=\\\"statusbtn btn btn-outline-warning m-3\\\" (click)=\\\"updateStatus(issue.id, cButton.value)\\\" *ngIf=\\\"issue.status == 'P'\\\" value=\\\"C\\\">Close</button>\\n                                            </div>\\n                                        </div>\\n                                    </sat-popover>\\n                                    <fa-icon [icon]=\\\"icons.ellipsis\\\" class=\\\"less-emphasis clickable\\\" [satPopoverAnchorFor]=\\\"issueDetail\\\" (click)=\\\"issueDetail.toggle()\\\"></fa-icon>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { DataService } from 'app/services/data.service';\nimport { SearchService } from 'app/services/search.service';\nimport { AuthenticationService } from 'app/services/authentication.service';\nimport { GET_ISSUES,\n          UPDATE_ISSUE_STATUS,\n          UPDATE_ISSUE_DEADLINE } from 'app/constants/endpoints';\nimport { INgxMyDpOptions } from 'ngx-mydatepicker';\nimport { StateService } from '@uirouter/angular';\nimport { faSearch, faAngleDown, faEllipsisV } from '@fortawesome/free-solid-svg-icons';\nimport { faCalendar } from '@fortawesome/free-regular-svg-icons';\n\n@Component({\n  selector: 'app-issueboard',\n  templateUrl: './issueboard.component.html',\n  styleUrls: ['./issueboard.component.scss']\n})\nexport class IssueboardComponent implements OnInit {\n\n  icons = {\n    search: faSearch,\n    calendar: faCalendar,\n    ellipsis: faEllipsisV,\n    angle_down: faAngleDown\n  }\n\n  today: Date = new Date();\n\n  filter_to: Date = new Date();\n  filter_from: Date = new Date(this.filter_to.getFullYear(),\n                      this.filter_to.getMonth(),\n                      this.filter_to.getDate()-6);\n\n    from_model: any = {\n      date: {\n        year: this.filter_from.getFullYear(),\n        month: this.filter_from.getMonth() + 1,\n        day: this.filter_from.getDate()\n      }\n    };\n\n    to_model: any = {\n      date: {\n        year: this.filter_to.getFullYear(),\n        month: this.filter_to.getMonth() + 1,\n        day: this.filter_to.getDate()\n      }\n    };\n\n  constructor(\n      private http: HttpClient,\n      private searchService: SearchService,\n      private dataService: DataService,\n      private stateService: StateService,\n      private authService: AuthenticationService,\n  ) { }\n\n  issues: any\n  users: {}\n  projects: {}\n\n  filtered_issues: any\n\n  filter_user = ''\n  filter_project = ''\n\n  filter_status = ''\n  \n  from_yesterday = new Date(this.filter_from.getFullYear(),\n                      this.filter_from.getMonth(),\n                      this.filter_from.getDate()-1)\n\n  to_tomorrow = new Date(this.filter_to.getFullYear(),\n                      this.filter_to.getMonth(),\n                      this.filter_to.getDate()+1)\n\n  disabled_from = {\n        year: this.from_yesterday.getFullYear(),\n        month: this.from_yesterday.getMonth() + 1,\n        day: this.from_yesterday.getDate()\n      }\n\n  disabled_to = {\n        year: this.to_tomorrow.getFullYear(),\n        month: this.to_tomorrow.getMonth() + 1,\n        day: this.to_tomorrow.getDate()\n      }\n\n  fromOptions: INgxMyDpOptions = {\n      dateFormat: 'mmm dd yyyy',\n      disableSince: this.disabled_to\n  };\n\n  toOptions: INgxMyDpOptions = {\n      dateFormat: 'mmm dd yyyy',\n      disableUntil: this.disabled_from\n  };\n\n  logged_user;\n\n  ngOnInit() {\n      this.logged_user = this.authService.authenticate()\n      this.fetchIssues()\n      this.fetchProjects()\n      this.fetchUsers()\n  }\n\n  fetchIssues(){\n      this.dataService.fetchIssues()\n          .subscribe(\n              data => {\n                this.issues = data\n                this.filtered_issues = data\n              }\n          );\n  }\n\n  fetchUsers(){\n      this.dataService.fetchUsers()\n          .subscribe(\n              data => {\n                  this.users = data\n              }\n          );\n  }\n\n  fetchProjects(){\n      this.dataService.fetchProjects()\n          .subscribe(\n              data => {\n                  this.projects = data\n              }\n          );\n  }\n\n  setDateFromFilter(from){\n      this.filter_from = new Date(from.date.year,\n                                  from.date.month-1,\n                                  from.date.day);\n\n      var yesterday = new Date(this.filter_from.getFullYear(),\n                      this.filter_from.getMonth(),\n                      this.filter_from.getDate()-1)\n\n      this.disabled_from.year = yesterday.getFullYear()\n      this.disabled_from.month = yesterday.getMonth()+1\n      this.disabled_from.day = yesterday.getDate()\n  }\n\n  setDateToFilter(to){\n      this.filter_to = new Date(to.date.year,\n                                  to.date.month-1,\n                                  to.date.day);\n\n      var tomorrow = new Date(this.filter_to.getFullYear(),\n                      this.filter_to.getMonth(),\n                      this.filter_to.getDate()+1)\n\n      this.disabled_to.year = tomorrow.getFullYear()\n      this.disabled_to.month = tomorrow.getMonth()+1\n      this.disabled_to.day = tomorrow.getDate()\n  }\n\n  updateStatus(id, status){\n      this.http.post(UPDATE_ISSUE_STATUS(id), {\"status\":status})\n      .subscribe();\n      var index = this.issues.findIndex(issue => {\n         return issue.id == id\n      })\n      this.issues[index].status = status\n  }\n\n  updateDeadline(id, deadline){\n      if (deadline){\n        this.http.post(UPDATE_ISSUE_DEADLINE(id), {\"deadline\":deadline})\n        .subscribe();\n      }\n  }\n\n  getIssues(keyword){\n    this.filtered_issues = this.searchService.searchIssues(keyword, this.issues)\n  }\n\n  getPending(){\n    if(!this.issues){\n      return null\n    }\n    return this.issues.filter(issue => {\n                       return issue.status == 'P'\n                  })\n  }\n\n  isWithinDate(issue_date, filter_from, filter_to){\n    return (new Date(issue_date).setHours(0,0,0,0) >= filter_from.setHours(0,0,0,0) &&\n            new Date(issue_date).setHours(0,0,0,0) <= filter_to.setHours(0,0,0,0))\n  }\n\n  goToDashboard(){\n    this.stateService.go('scrumboard');\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row border-bottom d-flex justify-content-between\\\">\\n        <div class=\\\"m-3 ml-5 pl-5 d-flex align-items-center w-50\\\">\\n            <div class=\\\"tabs clickable\\\">\\n                <span class=\\\"less-emphasis\\\"><b>Dashboard</b></span>\\n            </div>\\n            <div class=\\\"tabs clickable\\\" (click)=\\\"goToIssues()\\\">\\n                <span class=\\\"less-emphasis\\\"><b>All Issues</b></span>\\n            </div>\\n            <fa-icon [icon]=\\\"icons.search\\\" class=\\\"less-emphasis border-0 m-1 mr-3 ml-5 pl-5\\\"></fa-icon>\\n            <input type=\\\"text\\\" placeholder=\\\"Search\\\" class=\\\"border-0 less-emphasis searchbar\\\" (input)=\\\"getScrum(search.value)\\\" #search>\\n        </div>\\n        <div class=\\\"m-3 mr-5\\\">\\n            <app-avatar [username]=\\\"logged_user\\\" [id]=\\\"logged_user\\\"></app-avatar>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col p-5 mt-2 ml-5\\\">\\n            <div class=\\\"row mt-3\\\">\\n                <h1>Welcome back, {{logged_user}}!</h1>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <p class=\\\"less-emphasis\\\">There are {{ getPending()?.length }} issues and {{ getUrgent()?.length }} urgent tickets</p>\\n            </div>\\n                <hr>\\n            <div class=\\\"row pt-4 pb-4\\\">\\n                <div class=\\\"col d-flex flex-column\\\">\\n                    <div class=\\\"d-flex flex-row align-items-center\\\">\\n                        <span class=\\\"w-25 less-emphasis\\\">Select Project</span>\\n                        <div class=\\\"input-group\\\">\\n                          <select class=\\\"custom-select less-emphasis\\\" (change)=\\\"filter_project=select_project.value; filtered_scrum=scrums_bydate\\\" #select_project>\\n                            <option selected value=\\\"\\\">All Projects</option>\\n                            <option *ngFor=\\\"let project of projects\\\">{{ project.name }}</option>\\n                          </select>\\n                        </div>\\n                    </div>\\n                    <br>\\n                    <div class=\\\"d-flex flex-row align-items-center\\\">\\n                        <span class=\\\"w-25 less-emphasis\\\">Members</span>\\n                        <div class=\\\"input-group\\\">\\n                          <select class=\\\"custom-select less-emphasis\\\" (change)=\\\"filter_user=select_user.value; filtered_scrum=scrums_bydate\\\" #select_user>\\n                            <option selected value=\\\"\\\">All Members</option>\\n                            <option *ngFor=\\\"let user of users\\\">{{ user.username }}</option>\\n                          </select>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col d-flex flex-column\\\">\\n                    <div class=\\\"d-flex flex-row-reverse align-items-center\\\">\\n                            <div class=\\\"input-group date_filters\\\">\\n                                <input class=\\\"form-control datepicker less-emphasis\\\" ngx-mydatepicker name=\\\"to\\\" [(ngModel)]=\\\"to_model\\\" [options]=\\\"toOptions\\\" #to_dp=\\\"ngx-mydatepicker\\\" (dateChanged)=\\\"setDateToFilter($event); filtered_scrum=scrums_bydate\\\"/>\\n                                <span class=\\\"input-group-append\\\">\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-light less-emphasis grey-border\\\" (click)=\\\"to_dp.toggleCalendar()\\\">\\n                                        <fa-icon [icon]=\\\"icons.calendar\\\"></fa-icon>\\n                                    </button>\\n                                </span>\\n                            </div>\\n                            <h3 class=\\\"m-0 mr-2 ml-2\\\">-</h3>\\n                            <div class=\\\"input-group date_filters\\\">\\n                                <input class=\\\"form-control datepicker less-emphasis\\\" ngx-mydatepicker name=\\\"from\\\" [(ngModel)]=\\\"from_model\\\" [options]=\\\"fromOptions\\\" #from_dp=\\\"ngx-mydatepicker\\\" (dateChanged)=\\\"setDateFromFilter($event); filtered_scrum=scrums_bydate\\\"/>\\n                                <span class=\\\"input-group-append\\\">\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-light  less-emphasis grey-border\\\" (click)=\\\"from_dp.toggleCalendar()\\\">\\n                                        <fa-icon [icon]=\\\"icons.calendar\\\"></fa-icon>\\n                                    </button>\\n                                </span>\\n                            </div>\\n                        <span class=\\\"less-emphasis mr-4\\\">Date</span>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row pt-4\\\">\\n                <div class=\\\"col-sm-3\\\">\\n                    <h4><b>Stand up updates</b></h4>\\n                </div>\\n            </div>\\n            <div class=\\\"row mt-3 \\\">\\n                <div class=\\\"col-4 d-flex justify-content-end pr-5\\\">\\n                    <span class=\\\"category_label\\\"><b>Project Channel</b></span>\\n                </div>\\n                <div class=\\\"col-2\\\"></div>\\n                <div class=\\\"col\\\">\\n                    <span class=\\\"category_label\\\"><b>Issues</b></span>\\n                </div>\\n                <div class=\\\"col d-flex justify-content-end mr-4\\\">\\n                    <span class=\\\"category_label\\\"><b>Total Hours</b></span>\\n                </div>\\n            </div>\\n            <div class=\\\"mb-4\\\" *ngFor=\\\"let date_group of filtered_scrum | groupScrums:'date_created' \\\">\\n                <div *ngIf=\\\"isWithinDate(date_group.date, filter_from, filter_to)\\\">\\n                    <div class=\\\"row mb-3\\\">\\n                        <div class=\\\"col-sm-2 d-flex\\\">\\n                            <span class=\\\"align-self-center grey-border less-emphasis\\\">{{ date_group.date | date:'longDate'}}</span>\\n                        </div>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <hr>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"d-flex flex-column m-1 scrumlist\\\">\\n                        <div class=\\\"mt-1 mb-1 scrumitem\\\" *ngFor=\\\"let scrum of date_group.scrums\\\">\\n                            <div *ngIf=\\\"((filter_user=='' || scrum.user==filter_user) && (filter_project=='' || scrum.project==filter_project))\\\">\\n                                <div class=\\\"d-flex clickable align-items-center\\\" (click)=\\\"scrum.open = !scrum.open\\\">\\n                                    <app-marker [project]=\\\"scrum.project\\\"></app-marker>\\n                                    <div class=\\\"col-2 d-flex\\\">\\n                                        <div>\\n                                            <app-avatar [username]=\\\"scrum.user\\\" [id]=\\\"scrum.user\\\"></app-avatar>\\n                                        </div>\\n                                        <div class=\\\"ml-3\\\">\\n                                            <span><b>{{ scrum.user }}</b></span>\\n                                            <br>\\n                                            <span class=\\\"less-emphasis category_label\\\">{{ scrum.date_created | date:'shortTime'}} <span *ngIf=\\\"scrum.is_edited\\\">(edited)</span></span>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"col-4 d-flex ml-3 align-items-center\\\">\\n                                        <span class=\\\"project_label\\\" *ngIf=\\\"!scrum.open\\\">#{{ scrum.project }}</span>\\n                                    </div>\\n                                    <div class=\\\"col d-flex p-0 align-items-center\\\">\\n                                        <div *ngIf=\\\"!scrum.open\\\">\\n                                            <span class=\\\"less-emphasis\\\" *ngIf=\\\"!hasPending(scrum)\\\">No issues <img class=\\\"ml-3\\\" src=\\\"assets/img/confetti.png\\\"></span>\\n                                            <span class=\\\"less-emphasis\\\" *ngIf=\\\"hasPending(scrum)\\\">{{ scrum.issue_logs[0].issue }}</span>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"col d-flex pr-4 align-items-center justify-content-end\\\">\\n                                        <span><b>{{ scrum.hours }}</b></span>\\n                                    </div>\\n                                </div>\\n                                <div [collapse]=\\\"!scrum.open\\\">\\n                                    <div class=\\\"d-flex flex-column p-5\\\">\\n                                        <div>\\n                                            <span class=\\\"project_label\\\">#{{ scrum.project }}</span>\\n                                        </div>\\n                                        <br>\\n                                        <div class=\\\"d-flex\\\">\\n                                            <div class=\\\"col pr-4\\\">\\n                                                <div class=\\\"row flex-column mb-5\\\">\\n                                                    <p class=\\\"category_label\\\"><b>Done</b></p>\\n                                                    <div class=\\\"d-flex\\\" *ngFor=\\\"let log of scrum.done_logs\\\">\\n                                                        <fa-icon [icon]=\\\"icons.check\\\" class=\\\"pr-3 pt-1 check\\\"></fa-icon>\\n                                                        <p class=\\\"less-emphasis mb-2\\\">{{ log.message }}</p>\\n                                                    </div>\\n                                                </div>\\n                                                <div class=\\\"row flex-column\\\">\\n                                                    <p class=\\\"category_label\\\"><b>In progress</b></p>\\n                                                    <div class=\\\"d-flex\\\" *ngFor=\\\"let log of scrum.wip_logs\\\">\\n                                                        <fa-icon [icon]=\\\"icons.circle_notch\\\" class=\\\"pr-3 pt-1 wip\\\"></fa-icon>\\n                                                        <p class=\\\"less-emphasis mb-2\\\" > {{ log.message }}</p>\\n                                                    </div>\\n                                                </div>\\n                                            </div>\\n                                            <div class=\\\"col\\\">\\n                                                <div class=\\\"row flex-column mb-5\\\">\\n                                                    <p class=\\\"category_label\\\"><b>Pending</b></p>\\n                                                    <span class=\\\"less-emphasis\\\" *ngIf=\\\"!hasPending(scrum)\\\">No issues <img class=\\\"ml-3\\\" src=\\\"assets/img/confetti.png\\\"></span>\\n                                                    <div *ngFor=\\\"let issue of scrum.issue_logs\\\" class=\\\"issueitem mb-3 d-flex\\\" >\\n                                                        <div class=\\\"redmarker align-self-center\\\"></div>\\n                                                        <div class=\\\"d-flex flex-column flex-fill\\\">\\n                                                            <div class=\\\"row d-flex flex-column pt-3 pl-4 pr-3 pb-0 ml-2 mr-2 mb-2 clickable\\\" (click)=\\\"issue.open = !issue.open\\\">\\n                                                                <div class=\\\"d-flex justify-content-between\\\">\\n                                                                    <p class=\\\"mb-1 ml-2\\\">{{ issue.issue }}</p>\\n                                                                    <div class=\\\"d-flex align-items-center\\\">\\n                                                                        <p *ngIf=\\\"issue.is_urgent\\\" class=\\\"urgent p-1 pl-2 pr-2 rounded-left rounded-right mb-1 mr-2\\\">Urgent</p>\\n                                                                        <fa-icon [icon]=\\\"icons.angle_down\\\" class=\\\"less-emphasis ml-4\\\" *ngIf=\\\"!issue.open\\\"></fa-icon>\\n                                                                        <fa-icon [icon]=\\\"icons.angle_up\\\" class=\\\"less-emphasis ml-4\\\" *ngIf=\\\"issue.open\\\"></fa-icon>\\n                                                                    </div>\\n                                                                </div>\\n                                                                <div *ngIf=\\\"!issue.open\\\">\\n                                                                    <div class=\\\"d-flex\\\" *ngIf=\\\"issue.deadline\\\">\\n                                                                    <div class=\\\"mr-2\\\">\\n                                                                        <img src=\\\"assets/img/leave.png\\\" class=\\\"ml-2\\\">\\n                                                                    </div>\\n                                                                    <p class=\\\"less-emphasis category_labelel\\\">{{ issue.deadline | date:'longDate'}} - {{ issue.deadline | date:'shortTime'}}</p>\\n                                                                    </div>\\n                                                                </div>\\n                                                            </div>\\n                                                            <div class=\\\"ml-3 mr-2\\\" [collapse]=\\\"!issue.open\\\">\\n                                                                <div class=\\\"d-flex ml-4\\\">\\n                                                                    <div class=\\\"d-flex flex-column mr-3\\\">\\n                                                                        <span class=\\\"label less-emphasis pb-2\\\">Date</span>\\n                                                                        <div class=\\\"input-group\\\">\\n                                                                        <input type=\\\"text\\\" bsDatepicker class=\\\"form-control border deadline_picker\\\" #deadline_date=\\\"bsDatepicker\\\" [bsConfig]=\\\"{ dateInputFormat: 'MMMM D, YYYY' }\\\" [(ngModel)]=\\\"issue.deadline\\\" (bsValueChange)=\\\"updateDeadline(issue.id, issue.deadline)\\\" [minDate]=\\\"today\\\"/>\\n                                                                        <div class=\\\"input-group-append\\\">\\n                                                                            <button class=\\\"btn btn-light border border-left-0\\\" (click)=\\\"deadline_date.toggle()\\\">\\n                                                                                <fa-icon [icon]=\\\"icons.angle_down\\\" class=\\\"less-emphasis\\\"></fa-icon>\\n                                                                            </button>\\n                                                                        </div>\\n                                                                        </div>\\n                                                                    </div>\\n                                                                    <div class=\\\"d-flex flex-column\\\">\\n                                                                        <span class=\\\"label less-emphasis pb-2\\\">Time</span>\\n                                                                        <timepicker [(ngModel)]=\\\"issue.deadline\\\" [showSpinners]=\\\"false\\\" minuteStep='1' (isValid)=\\\"updateDeadline(issue.id, issue.deadline)\\\"></timepicker>\\n                                                                    </div>\\n                                                                </div>\\n                                                                <div>\\n                                                                    <button #rButton type=\\\"button\\\" class=\\\"statusbtn btn btn-outline-success m-3 ml-4\\\" (click)=\\\"updateStatus(issue.id, rButton.value)\\\" *ngIf=\\\"issue.status == 'P'\\\" value=\\\"R\\\">Mark as Solved</button>\\n                                                                    <button #cButton type=\\\"button\\\" class=\\\"statusbtn btn btn-outline-warning m-3\\\" (click)=\\\"updateStatus(issue.id, cButton.value)\\\" *ngIf=\\\"issue.status == 'P'\\\" value=\\\"C\\\">Close</button>\\n                                                                </div>\\n                                                            </div>\\n                                                        </div>\\n                                                    </div>\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-3 border-left issuelist p-0\\\">\\n            <div class=\\\"row m-4\\\">\\n                <b class=\\\"category_label\\\">Issues stream</b>\\n            </div>\\n            <div class=\\\"d-flex flex-column\\\">\\n                <div *ngFor=\\\"let issue of issues\\\">\\n                    <div class=\\\"d-flex pl-4 pt-3 pb-3 hoverable clickable\\\" (click)=\\\"getIssue(issue.id)\\\" *ngIf=\\\"issue.status=='P'\\\">\\n                        <div class=\\\"d-flex\\\">\\n                            <app-avatar [username]=\\\"issue.scrum_data.user_username\\\" [id]=\\\"issue.scrum_data.user_username\\\"></app-avatar>\\n                        </div>\\n                        <div class=\\\"d-flex flex-fill flex-column ml-3 mr-5\\\">\\n                            <div class=\\\"d-flex justify-content-between mb-1\\\">\\n                                    <p class=\\\"m-0\\\"><b>{{ issue.scrum_data.user_username }}</b></p>\\n                                    <p class=\\\"m-0 project_label label\\\">#{{ issue.scrum_data.project_name }}</p>\\n                                    <p class=\\\"m-0 less-emphasis\\\">{{ issue.scrum_data.date_created | date:'shortTime'}}</p>\\n                            </div>\\n                            <div class=\\\"d-flex flex-fill justify-content-between mb-1 less-emphasis\\\">\\n                                <span>{{ issue.issue }}</span>\\n                                <p *ngIf=\\\"issue.is_urgent\\\" class=\\\"urgent p-1 pl-2 pr-2 rounded-left rounded-right\\\">Urgent</p>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import * as _ from 'underscore';\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { INgxMyDpOptions } from 'ngx-mydatepicker';\n\nimport { DataService } from 'app/services/data.service';\nimport { ScrumDataService } from 'app/services/scrum-data.service';\nimport { FilterService } from 'app/services/filter.service';\nimport { SearchService } from 'app/services/search.service';\nimport { AuthenticationService } from 'app/services/authentication.service';\nimport { StateService } from '@uirouter/angular';\nimport { GET_ISSUES,\n          UPDATE_ISSUE_STATUS,\n          UPDATE_ISSUE_DEADLINE } from 'app/constants/endpoints';\nimport { faCircleNotch, faCheck, faSearch,\n          faAngleUp, faAngleDown } from '@fortawesome/free-solid-svg-icons';\nimport { faCalendar } from '@fortawesome/free-regular-svg-icons';\n\n@Component({\n  selector: 'app-scrumboard',\n  templateUrl: './scrumboard.component.html',\n  styleUrls: ['./scrumboard.component.css']\n})\nexport class ScrumboardComponent implements OnInit {\n\n  icons = {\n    circle_notch: faCircleNotch,\n    check: faCheck,\n    search: faSearch,\n    calendar: faCalendar,\n    angle_up: faAngleUp,\n    angle_down: faAngleDown\n  }\n\n  today: Date = new Date();\n\n  filter_to: Date = new Date();\n  filter_from: Date = new Date(this.filter_to.getFullYear(),\n                      this.filter_to.getMonth(),\n                      this.filter_to.getDate()-6);\n\n    from_model: any = {\n      date: {\n        year: this.filter_from.getFullYear(),\n        month: this.filter_from.getMonth() + 1,\n        day: this.filter_from.getDate()\n      }\n    };\n\n    to_model: any = {\n      date: {\n        year: this.filter_to.getFullYear(),\n        month: this.filter_to.getMonth() + 1,\n        day: this.filter_to.getDate()\n      }\n    };\n\n\n  constructor(\n      private http: HttpClient,\n      private filterService: FilterService,\n      private searchService: SearchService,\n      private dataService: DataService,\n      private stateService: StateService,\n      private authService: AuthenticationService,\n  ) { }\n\n  scrums_bydate: any\n  issues: any\n  users: {}\n  projects: {}\n\n  filter_user = ''\n  filter_project = ''\n\n  filtered_scrum: any;\n\n  from_yesterday = new Date(this.filter_from.getFullYear(),\n                      this.filter_from.getMonth(),\n                      this.filter_from.getDate()-1)\n\n  to_tomorrow = new Date(this.filter_to.getFullYear(),\n                      this.filter_to.getMonth(),\n                      this.filter_to.getDate()+1)\n\n  disabled_from = {\n        year: this.from_yesterday.getFullYear(),\n        month: this.from_yesterday.getMonth() + 1,\n        day: this.from_yesterday.getDate()\n      }\n\n  disabled_to = {\n        year: this.to_tomorrow.getFullYear(),\n        month: this.to_tomorrow.getMonth() + 1,\n        day: this.to_tomorrow.getDate()\n      }\n\n  fromOptions: INgxMyDpOptions = {\n      dateFormat: 'mmm dd yyyy',\n      disableSince: this.disabled_to\n  };\n\n  toOptions: INgxMyDpOptions = {\n      dateFormat: 'mmm dd yyyy',\n      disableUntil: this.disabled_from\n  };\n\n  model: any = {beginDate: this.from_model.date,\n                endDate: this.to_model.date};\n\n  show_object = {\n    id: '',\n    show: true,\n  };\n\n  deadline: Date;\n\n  logged_user;\n\n  ngOnInit() {\n      this.logged_user = this.authService.authenticate()\n      this.fetchIssues()\n      this.fetchScrums()\n      this.fetchUsers()\n      this.fetchProjects()\n  }\n\n  fetchScrums(){\n      this.dataService.fetchScrums()\n          .subscribe(\n              data => {\n                  this.scrums_bydate = data\n                  var scrums = _.map(this.scrums_bydate, scrum => {return scrum.scrums})\n                  this.filtered_scrum = data\n              }\n          );\n  }\n\n  fetchIssues(){\n      this.dataService.fetchIssues()\n          .subscribe(\n              data => {\n                  this.issues = data\n              }\n          );\n  }\n\n  fetchUsers(){\n      this.dataService.fetchUsers()\n          .subscribe(\n              data => {\n                  this.users = data\n              }\n          );\n  }\n\n  fetchProjects(){\n      this.dataService.fetchProjects()\n          .subscribe(\n              data => {\n                  this.projects = data\n              }\n          );\n  }\n\n  setDateFromFilter(from){\n      this.filter_from = new Date(from.date.year,\n                                  from.date.month-1,\n                                  from.date.day);\n\n      var yesterday = new Date(this.filter_from.getFullYear(),\n                      this.filter_from.getMonth(),\n                      this.filter_from.getDate()-1)\n\n      this.disabled_from.year = yesterday.getFullYear()\n      this.disabled_from.month = yesterday.getMonth()+1\n      this.disabled_from.day = yesterday.getDate()\n  }\n\n  setDateToFilter(to){\n      this.filter_to = new Date(to.date.year,\n                                  to.date.month-1,\n                                  to.date.day);\n\n      var tomorrow = new Date(this.filter_to.getFullYear(),\n                      this.filter_to.getMonth(),\n                      this.filter_to.getDate()+1)\n\n      this.disabled_to.year = tomorrow.getFullYear()\n      this.disabled_to.month = tomorrow.getMonth()+1\n      this.disabled_to.day = tomorrow.getDate()\n  }\n\n  getIssue(id){\n      this.filtered_scrum = [this.scrums_bydate.find(scrum => {\n          return scrum.issue_logs.find(issue => {\n                     return issue.id == id\n                  })\n      })]\n  }\n\n  getUrgent(){\n      if(!this.issues){\n        return null\n      }\n      return this.issues.filter(issue => {\n                       return issue.is_urgent == true &&\n                               issue.status == 'P'\n                  })\n  }\n  \n  getPending(){\n    if(!this.issues){\n      return null\n    }\n    return this.issues.filter(issue => {\n                       return issue.status == 'P'\n                  })\n  }\n\n  updateStatus(id, status){\n      this.http.post(UPDATE_ISSUE_STATUS(id), {\"status\":status})\n      .subscribe();\n      var index = this.issues.findIndex(issue => {\n         return issue.id == id\n      })\n      this.issues[index].status = status\n      var scrum_index = this.scrums_bydate.findIndex(scrum => {\n         return scrum.issue_logs.find(issue => {\n             return issue.id == id\n          })\n      })\n      var issue_index = this.scrums_bydate[scrum_index].issue_logs.findIndex(issue => {\n         return issue.id == id\n      })\n      this.scrums_bydate[scrum_index].issue_logs.splice(issue_index,1)\n  }\n\n  updateDeadline(id, deadline){\n      if (deadline){\n        this.http.post(UPDATE_ISSUE_DEADLINE(id), {\"deadline\":deadline})\n        .subscribe();\n      }\n  }\n\n  isWithinDate(scrum_date, filter_from, filter_to){\n    return (new Date(scrum_date).setHours(0,0,0,0) >= filter_from.setHours(0,0,0,0) &&\n            new Date(scrum_date).setHours(0,0,0,0) <= filter_to.setHours(0,0,0,0))\n  }\n\n  getTotalHours(user, project, from, to){\n    var filtered_data = this.filterService.filterScrum(user, project, from, to, this.scrums_bydate)\n    return filtered_data.map(scrum => scrum.hours).reduce((x,y) => (+x)+(+y), 0)\n  }\n\n  getScrum(keyword){\n    this.filtered_scrum = this.searchService.searchScrums(keyword, this.scrums_bydate)\n  }\n\n  hasPending(scrum){\n    var pending = scrum.issue_logs.filter(issue => {\n                       return issue.status == 'P'\n                  })\n    return (pending.length!=0)\n  }\n\n  goToIssues(){\n    this.stateService.go('issuesboard');\n  }\n\n}\n","module.exports = \"<div class=\\\"d-flex justify-content-center align-items-center login_container flex-column\\\">\\n    <h1 class=\\\"pb-4\\\">LOGIN TO SCRUMBOARD</h1>\\n    <p *ngIf=\\\"invalid_message\\\" class=\\\"invalid_message\\\">{{invalid_message}}</p>\\n    <form class=\\\"d-flex flex-column justify-content-center\\\">\\n        <div class=\\\"form-group login_form\\\">\\n            <label>Username</label>\\n            <input (keypress)=\\\"invalid_message=''\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\" #username>\\n        </div>\\n        <div class=\\\"form-group login_form\\\">\\n            <label for=\\\"exampleInputPassword1\\\">Password</label>\\n            <input (keypress)=\\\"invalid_message=''\\\" type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" #password>\\n        </div>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4\\\" (click)=\\\"login(username,password)\\\">Login</button>\\n    </form>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { StateService } from '@uirouter/angular';\nimport { AuthenticationService } from 'app/services/authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(\n      private stateService: StateService,\n      private authService: AuthenticationService,\n  ) { }\n\n  ngOnInit() {\n      if(localStorage.getItem('user')){\n        this.stateService.go('scrumboard')\n      }\n  }\n\n  invalid_message;\n\n  login(username, password){\n        this.authService.loginUser({\"username\":username.value, \"password\":password.value})\n                .subscribe(()=>{\n                    localStorage.setItem('user',username.value)\n                    this.stateService.go('scrumboard')},\n                    ()=>{\n                    this.invalid_message=\"INVALID USERNAME OR PASSWORD\"\n                    }\n                )\n  }\n\n\n}\n","module.exports = \"<div class=\\\"row border-bottom d-flex justify-content-between\\\">\\n    <div class=\\\"m-3 ml-5 d-flex align-items-center w-50\\\">\\n        <i class=\\\"less-emphasis fas fa-search border-0 m-1 mr-3\\\"></i>\\n        <input type=\\\"text\\\" placeholder=\\\"Search\\\" class=\\\"border-0 less-emphasis searchbar\\\" (input)=\\\"getScrum(search.value)\\\" #search>\\n    </div>\\n    <div class=\\\"m-3 mr-5\\\">\\n        <app-avatar></app-avatar>\\n    </div>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"marker\\\" [style.background-color]= \\\"getColor(project)\\\">\\n</div>\"","module.exports = \"\"","import * as colorGen from 'string-to-color';\nimport { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-marker',\n  templateUrl: './marker.component.html',\n  styleUrls: ['./marker.component.scss']\n})\nexport class MarkerComponent implements OnInit {\n\n  @Input() project\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  getColor(project: string){\n      if(!project){\n          project = 'light-green'\n      }\n      return colorGen(project)\n  }\n}\n","export const TEAM_ID = 'T0R2RHDB8';","import { TEAM_ID } from 'app/constants/config';\n\nexport const GET_LOGS = () => '/api/scrum/';\nexport const GET_ISSUES = () => '/api/scrum/issues/';\nexport const GET_TEAM_MEMBERS = () => '/api/accounts/users/'+TEAM_ID+'/';\nexport const GET_TEAM_PROJECTS = () => '/api/accounts/projects/'+TEAM_ID+'/';\nexport const UPDATE_ISSUE_STATUS = (id) => '/api/scrum/update_status/'+id;\nexport const UPDATE_ISSUE_DEADLINE = (id) => '/api/scrum/update_deadline/'+id;\nexport const LOGIN_USER = () => '/api/accounts/login/';\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'groupIssues'\n})\nexport class GroupIssuesPipe implements PipeTransform {\n\n  transform(issues: Object[], date: string): any {\n      if(!issues){\n          return null;\n      }\n      const grouped_issues = issues.reduce((previous, current)=> {\n            var date_index = new Date(current['scrum_data'][date]).toLocaleDateString()\n            if(!previous[date_index]) {\n                previous[date_index] = [current];\n            } else {\n                previous[date_index].push(current);\n            }\n            return previous;\n        }, {});\n      console.log(Object.keys(grouped_issues).map(date => ({ date, issues: grouped_issues[date] })))\n      return Object.keys(grouped_issues).map(date => ({ date, issues: grouped_issues[date] }));\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'groupScrums'\n})\nexport class GroupScrumsPipe implements PipeTransform {\n\n  transform(scrum: Object[], date: string): any {\n      if(!scrum){\n          return null;\n      }\n      const grouped_scrums = scrum.reduce((previous, current)=> {\n            var date_index = new Date(current[date]).toLocaleDateString()\n            if(!previous[date_index]) {\n                previous[date_index] = [current];\n            } else {\n                previous[date_index].push(current);\n            }\n            return previous;\n        }, {});\n      return Object.keys(grouped_scrums).map(date => ({ date, scrums: grouped_scrums[date] }));\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { StateService } from '@uirouter/angular';\n\nimport { LOGIN_USER } from 'app/constants/endpoints';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  constructor(\n      private stateService: StateService,\n      private http: HttpClient,\n  ) { }\n\n  loginUser(credentials){\n      return this.http.post(LOGIN_USER(),credentials)\n  }\n  \n  authenticate(){\n      if(!localStorage.getItem('user')){\n        this.stateService.go('login')\n      }\n      return localStorage.getItem('user')\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { GET_LOGS,\n        GET_ISSUES,\n        GET_TEAM_MEMBERS,\n        GET_TEAM_PROJECTS } from 'app/constants/endpoints';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor(\n      private http: HttpClient,\n  ) { }\n\n  users: {}\n  projects: {}\n  scrum_data: any\n\n  fetchScrums(){\n      return this.http.get(GET_LOGS())\n  }\n\n  fetchUsers(){\n      return this.http.get(GET_TEAM_MEMBERS())\n  }\n\n  fetchProjects(){\n      return this.http.get(GET_TEAM_PROJECTS())\n  }\n\n  fetchIssues(){\n      return this.http.get(GET_ISSUES())\n  }\n\n  getScrums(){\n      return this.scrum_data\n  }\n\n  getUsers(){\n      return this.users\n  }\n\n  getProjects(){\n      return this.projects\n  }\n\n  setScrums(scrum_data){\n      this.scrum_data = scrum_data\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilterService {\n\n  constructor() { }\n\n  log_type = ''\n\n  filterScrum(username, project, from, to, scrums){\n      return scrums.filter(scrum => {\n        var date = new Date(scrum.date_created)\n        date.setHours(0,0,0,0)\n        return scrum.user.includes(username) && \n        scrum.project.includes(project) && \n        (date >= from && date <= to)\n      })\n  }\n\n  filterScrumSearch(keyword, scrums){\n      return scrums.filter(scrum => {\n        var date = new Date(scrum.date_created)\n        date.setHours(0,0,0,0)\n        var done_logs = scrum.done_logs.filter(log=>{\n                          return log.message.search(new RegExp(keyword, 'i')) >= 0 \n                        })\n        var wip_logs = scrum.wip_logs.filter(log=>{\n                          return log.message.search(new RegExp(keyword, 'i')) >= 0 \n                        })\n        var issue_logs = scrum.issue_logs.filter(log=>{\n                          return log.issue.search(new RegExp(keyword, 'i')) >= 0  ||\n                          log.status.search(new RegExp(keyword, 'i')) >= 0 \n                        })\n        return scrum.user.search(new RegExp(keyword, 'i')) >= 0 || \n        scrum.project.search(new RegExp(keyword, 'i')) >= 0  ||\n        done_logs.length!=0 || wip_logs.length!=0 ||\n        issue_logs.length!=0\n      })\n  }\n\n  filterIssues(status, dateFilterForm, username, project, issues){\n      if (status === 'ALL') {\n        status = ''\n      }\n\n      if (username === 'ALL') {\n        username = ''\n      }\n\n      if (project === 'ALL') {\n        project = ''\n      }\n\n      var from = new Date(dateFilterForm.from.date.month + \"/\" + dateFilterForm.from.date.day + \"/\" + dateFilterForm.from.date.year)\n      var to = new Date(dateFilterForm.to.date.month + \"/\" + dateFilterForm.to.date.day + \"/\" + dateFilterForm.to.date.year)\n\n      return issues.filter(issue => {\n        var date = new Date(issue.date_created)\n        date.setHours(0,0,0,0)\n        return issue.status.includes(status) &&\n        issue.user.includes(username) && \n        issue.project.includes(project) && \n        (date >= from && date <= to)\n      })\n  }\n\n  filterById(id, issues){\n      return issues.findIndex(issue => {\n        return issue.id == id\n      })\n  }\n\n  filterPending(issues){\n      return issues.find(issue => {\n         issue.status == \"Pending\"\n      })\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { GET_LOGS } from 'app/constants/endpoints';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ScrumDataService {\n\n  constructor(\n      private http: HttpClient,\n  ) { }\n  \n  scrum_data: any\n\n  fetchScrums(){\n      return this.http.get(GET_LOGS())\n  }\n\n  getScrums(){\n      return this.scrum_data\n  }\n\n  setScrums(scrum_data){\n      this.scrum_data = scrum_data\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchService {\n\n  constructor() { }\n\n  searchScrums(keyword, scrums){\n      return scrums.filter(scrum => {\n        var done_logs = scrum.done_logs.filter(log=>{\n                          return log.message.search(new RegExp(keyword, 'i')) >= 0 \n                        })\n        var wip_logs = scrum.wip_logs.filter(log=>{\n                          return log.message.search(new RegExp(keyword, 'i')) >= 0 \n                        })\n        var issue_logs = scrum.issue_logs.filter(log=>{\n                          return log.issue.search(new RegExp(keyword, 'i')) >= 0\n                        })\n        return scrum.user.search(new RegExp(keyword, 'i')) >= 0 || \n        scrum.project.search(new RegExp(keyword, 'i')) >= 0  ||\n        scrum.hours.search(new RegExp(keyword, 'i')) >= 0 ||\n        done_logs.length!=0 || wip_logs.length!=0\n        || issue_logs.length!=0\n      })\n  }\n\n  searchIssues(keyword, issues){\n      return issues.filter(issue => {\n        return issue.scrum_data.user_username.search(new RegExp(keyword, 'i')) >= 0 ||\n        issue.scrum_data.project_name.search(new RegExp(keyword, 'i')) >= 0 ||\n        issue.issue.search(new RegExp(keyword, 'i')) >= 0 \n      })\n  }\n\n}\n","export function ContentOnly(content){\n\treturn {\n\t\tcontent: content\n\t}\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}